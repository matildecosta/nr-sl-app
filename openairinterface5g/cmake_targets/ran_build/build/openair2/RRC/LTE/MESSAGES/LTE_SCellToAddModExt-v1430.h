/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "/home/matilde/openairinterface5g/openair2/RRC/LTE/MESSAGES/ASN.1/lte-rrc-15.6.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -D /home/matilde/openairinterface5g/cmake_targets/ran_build/build/openair2/RRC/LTE/MESSAGES`
 */

#ifndef	_LTE_SCellToAddModExt_v1430_H_
#define	_LTE_SCellToAddModExt_v1430_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LTE_SCellToAddModExt_v1430__ext1__sCellState_r15 {
	LTE_SCellToAddModExt_v1430__ext1__sCellState_r15_activated	= 0,
	LTE_SCellToAddModExt_v1430__ext1__sCellState_r15_dormant	= 1
} e_LTE_SCellToAddModExt_v1430__ext1__sCellState_r15;

/* LTE_SCellToAddModExt-v1430 */
typedef struct LTE_SCellToAddModExt_v1430 {
	long	*srs_SwitchFromServCellIndex_r14;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct LTE_SCellToAddModExt_v1430__ext1 {
		long	*sCellState_r15;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} LTE_SCellToAddModExt_v1430_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_LTE_sCellState_r15_5;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_LTE_SCellToAddModExt_v1430;
extern asn_SEQUENCE_specifics_t asn_SPC_LTE_SCellToAddModExt_v1430_specs_1;
extern asn_TYPE_member_t asn_MBR_LTE_SCellToAddModExt_v1430_1[2];

#ifdef __cplusplus
}
#endif

#endif	/* _LTE_SCellToAddModExt_v1430_H_ */
#include <asn_internal.h>
