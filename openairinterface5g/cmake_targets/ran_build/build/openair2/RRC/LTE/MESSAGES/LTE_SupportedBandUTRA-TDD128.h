/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "/home/matilde/nr-sl-app/openairinterface5g/openair2/RRC/LTE/MESSAGES/ASN.1/lte-rrc-15.6.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -D /home/matilde/nr-sl-app/openairinterface5g/cmake_targets/ran_build/build/openair2/RRC/LTE/MESSAGES`
 */

#ifndef	_LTE_SupportedBandUTRA_TDD128_H_
#define	_LTE_SupportedBandUTRA_TDD128_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LTE_SupportedBandUTRA_TDD128 {
	LTE_SupportedBandUTRA_TDD128_a	= 0,
	LTE_SupportedBandUTRA_TDD128_b	= 1,
	LTE_SupportedBandUTRA_TDD128_c	= 2,
	LTE_SupportedBandUTRA_TDD128_d	= 3,
	LTE_SupportedBandUTRA_TDD128_e	= 4,
	LTE_SupportedBandUTRA_TDD128_f	= 5,
	LTE_SupportedBandUTRA_TDD128_g	= 6,
	LTE_SupportedBandUTRA_TDD128_h	= 7,
	LTE_SupportedBandUTRA_TDD128_i	= 8,
	LTE_SupportedBandUTRA_TDD128_j	= 9,
	LTE_SupportedBandUTRA_TDD128_k	= 10,
	LTE_SupportedBandUTRA_TDD128_l	= 11,
	LTE_SupportedBandUTRA_TDD128_m	= 12,
	LTE_SupportedBandUTRA_TDD128_n	= 13,
	LTE_SupportedBandUTRA_TDD128_o	= 14,
	LTE_SupportedBandUTRA_TDD128_p	= 15
	/*
	 * Enumeration is extensible
	 */
} e_LTE_SupportedBandUTRA_TDD128;

/* LTE_SupportedBandUTRA-TDD128 */
typedef long	 LTE_SupportedBandUTRA_TDD128_t;

/* Implementation */
extern asn_per_constraints_t asn_PER_type_LTE_SupportedBandUTRA_TDD128_constr_1;
extern asn_TYPE_descriptor_t asn_DEF_LTE_SupportedBandUTRA_TDD128;
extern const asn_INTEGER_specifics_t asn_SPC_LTE_SupportedBandUTRA_TDD128_specs_1;
asn_struct_free_f LTE_SupportedBandUTRA_TDD128_free;
asn_struct_print_f LTE_SupportedBandUTRA_TDD128_print;
asn_constr_check_f LTE_SupportedBandUTRA_TDD128_constraint;
xer_type_decoder_f LTE_SupportedBandUTRA_TDD128_decode_xer;
xer_type_encoder_f LTE_SupportedBandUTRA_TDD128_encode_xer;
per_type_decoder_f LTE_SupportedBandUTRA_TDD128_decode_uper;
per_type_encoder_f LTE_SupportedBandUTRA_TDD128_encode_uper;
per_type_decoder_f LTE_SupportedBandUTRA_TDD128_decode_aper;
per_type_encoder_f LTE_SupportedBandUTRA_TDD128_encode_aper;

#ifdef __cplusplus
}
#endif

#endif	/* _LTE_SupportedBandUTRA_TDD128_H_ */
#include <asn_internal.h>
