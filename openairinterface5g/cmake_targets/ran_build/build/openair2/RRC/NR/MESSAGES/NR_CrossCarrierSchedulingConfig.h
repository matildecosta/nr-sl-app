/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/matilde/nr-sl-app/openairinterface5g/openair2/RRC/NR/MESSAGES/ASN.1/nr-rrc-17.3.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -findirect-choice -D /home/matilde/nr-sl-app/openairinterface5g/cmake_targets/ran_build/build/openair2/RRC/NR/MESSAGES`
 */

#ifndef	_NR_CrossCarrierSchedulingConfig_H_
#define	_NR_CrossCarrierSchedulingConfig_H_


#include <asn_application.h>

/* Including external dependencies */
#include <BOOLEAN.h>
#include <constr_SEQUENCE.h>
#include "NR_ServCellIndex.h"
#include <NativeInteger.h>
#include <constr_CHOICE.h>
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_CrossCarrierSchedulingConfig__schedulingCellInfo_PR {
	NR_CrossCarrierSchedulingConfig__schedulingCellInfo_PR_NOTHING,	/* No components present */
	NR_CrossCarrierSchedulingConfig__schedulingCellInfo_PR_own,
	NR_CrossCarrierSchedulingConfig__schedulingCellInfo_PR_other
} NR_CrossCarrierSchedulingConfig__schedulingCellInfo_PR;
typedef enum NR_CrossCarrierSchedulingConfig__ext1__enableDefaultBeamForCCS_r16 {
	NR_CrossCarrierSchedulingConfig__ext1__enableDefaultBeamForCCS_r16_enabled	= 0
} e_NR_CrossCarrierSchedulingConfig__ext1__enableDefaultBeamForCCS_r16;
typedef enum NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17 {
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_oneSeventh	= 0,
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_threeFourteenth	= 1,
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_twoSeventh	= 2,
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_threeSeventh	= 3,
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_oneHalf	= 4,
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_fourSeventh	= 5,
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_fiveSeventh	= 6,
	NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17_spare1	= 7
} e_NR_CrossCarrierSchedulingConfig__ext2__ccs_BlindDetectionSplit_r17;

/* NR_CrossCarrierSchedulingConfig */
typedef struct NR_CrossCarrierSchedulingConfig {
	struct NR_CrossCarrierSchedulingConfig__schedulingCellInfo {
		NR_CrossCarrierSchedulingConfig__schedulingCellInfo_PR present;
		union NR_CrossCarrierSchedulingConfig__NR_schedulingCellInfo_u {
			struct NR_CrossCarrierSchedulingConfig__schedulingCellInfo__own {
				BOOLEAN_t	 cif_Presence;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *own;
			struct NR_CrossCarrierSchedulingConfig__schedulingCellInfo__other {
				NR_ServCellIndex_t	 schedulingCellId;
				long	 cif_InSchedulingCell;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *other;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} schedulingCellInfo;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct NR_CrossCarrierSchedulingConfig__ext1 {
		struct NR_CrossCarrierSchedulingConfig__ext1__carrierIndicatorSize_r16 {
			long	 carrierIndicatorSizeDCI_1_2_r16;
			long	 carrierIndicatorSizeDCI_0_2_r16;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *carrierIndicatorSize_r16;
		long	*enableDefaultBeamForCCS_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct NR_CrossCarrierSchedulingConfig__ext2 {
		long	*ccs_BlindDetectionSplit_r17;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_CrossCarrierSchedulingConfig_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_enableDefaultBeamForCCS_r16_13;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_ccs_BlindDetectionSplit_r17_16;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_CrossCarrierSchedulingConfig;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_CrossCarrierSchedulingConfig_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_CrossCarrierSchedulingConfig_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _NR_CrossCarrierSchedulingConfig_H_ */
#include <asn_internal.h>
