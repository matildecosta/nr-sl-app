/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "/home/matilde/nr-sl-app/openairinterface5g/openair2/RRC/NR/MESSAGES/ASN.1/nr-rrc-17.3.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -findirect-choice -D /home/matilde/nr-sl-app/openairinterface5g/cmake_targets/ran_build/build/openair2/RRC/NR/MESSAGES`
 */

#ifndef	_NR_ServingCellConfigCommon_H_
#define	_NR_ServingCellConfigCommon_H_


#include <asn_application.h>

/* Including external dependencies */
#include "NR_PhysCellId.h"
#include <NativeEnumerated.h>
#include "NR_SubcarrierSpacing.h"
#include <NativeInteger.h>
#include <BIT_STRING.h>
#include <constr_CHOICE.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include "NR_RateMatchPatternId.h"
#include "NR_SSB-PositionQCL-Relation-r16.h"
#include <NULL.h>
#include <constr_SEQUENCE.h>
#include "NR_SSB-PositionQCL-Relation-r17.h"
#include "NR_FeaturePriority-r17.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum NR_ServingCellConfigCommon__n_TimingAdvanceOffset {
	NR_ServingCellConfigCommon__n_TimingAdvanceOffset_n0	= 0,
	NR_ServingCellConfigCommon__n_TimingAdvanceOffset_n25600	= 1,
	NR_ServingCellConfigCommon__n_TimingAdvanceOffset_n39936	= 2
} e_NR_ServingCellConfigCommon__n_TimingAdvanceOffset;
typedef enum NR_ServingCellConfigCommon__ssb_PositionsInBurst_PR {
	NR_ServingCellConfigCommon__ssb_PositionsInBurst_PR_NOTHING,	/* No components present */
	NR_ServingCellConfigCommon__ssb_PositionsInBurst_PR_shortBitmap,
	NR_ServingCellConfigCommon__ssb_PositionsInBurst_PR_mediumBitmap,
	NR_ServingCellConfigCommon__ssb_PositionsInBurst_PR_longBitmap
} NR_ServingCellConfigCommon__ssb_PositionsInBurst_PR;
typedef enum NR_ServingCellConfigCommon__ssb_periodicityServingCell {
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_ms5	= 0,
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_ms10	= 1,
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_ms20	= 2,
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_ms40	= 3,
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_ms80	= 4,
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_ms160	= 5,
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_spare2	= 6,
	NR_ServingCellConfigCommon__ssb_periodicityServingCell_spare1	= 7
} e_NR_ServingCellConfigCommon__ssb_periodicityServingCell;
typedef enum NR_ServingCellConfigCommon__dmrs_TypeA_Position {
	NR_ServingCellConfigCommon__dmrs_TypeA_Position_pos2	= 0,
	NR_ServingCellConfigCommon__dmrs_TypeA_Position_pos3	= 1
} e_NR_ServingCellConfigCommon__dmrs_TypeA_Position;
typedef enum NR_ServingCellConfigCommon__ext1__channelAccessMode_r16_PR {
	NR_ServingCellConfigCommon__ext1__channelAccessMode_r16_PR_NOTHING,	/* No components present */
	NR_ServingCellConfigCommon__ext1__channelAccessMode_r16_PR_dynamic,
	NR_ServingCellConfigCommon__ext1__channelAccessMode_r16_PR_semiStatic
} NR_ServingCellConfigCommon__ext1__channelAccessMode_r16_PR;
typedef enum NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16 {
	NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16_ms0dot5	= 0,
	NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16_ms1	= 1,
	NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16_ms2	= 2,
	NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16_ms3	= 3,
	NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16_ms4	= 4,
	NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16_ms5	= 5
} e_NR_ServingCellConfigCommon__ext1__discoveryBurstWindowLength_r16;
typedef enum NR_ServingCellConfigCommon__ext2__channelAccessMode2_r17 {
	NR_ServingCellConfigCommon__ext2__channelAccessMode2_r17_enabled	= 0
} e_NR_ServingCellConfigCommon__ext2__channelAccessMode2_r17;
typedef enum NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17 {
	NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17_ms0dot125	= 0,
	NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17_ms0dot25	= 1,
	NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17_ms0dot5	= 2,
	NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17_ms0dot75	= 3,
	NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17_ms1	= 4,
	NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17_ms1dot25	= 5
} e_NR_ServingCellConfigCommon__ext2__discoveryBurstWindowLength_r17;

/* Forward declarations */
struct NR_DownlinkConfigCommon;
struct NR_UplinkConfigCommon;
struct NR_SetupRelease_RateMatchPatternLTE_CRS;
struct NR_TDD_UL_DL_ConfigCommon;
struct NR_RateMatchPattern;
struct NR_HighSpeedConfig_r16;
struct NR_SemiStaticChannelAccessConfig_r16;
struct NR_HighSpeedConfig_v1700;
struct NR_HighSpeedConfigFR2_r17;
struct NR_UplinkConfigCommon_v1700;
struct NR_NTN_Config_r17;

/* NR_ServingCellConfigCommon */
typedef struct NR_ServingCellConfigCommon {
	NR_PhysCellId_t	*physCellId;	/* OPTIONAL */
	struct NR_DownlinkConfigCommon	*downlinkConfigCommon;	/* OPTIONAL */
	struct NR_UplinkConfigCommon	*uplinkConfigCommon;	/* OPTIONAL */
	struct NR_UplinkConfigCommon	*supplementaryUplinkConfig;	/* OPTIONAL */
	long	*n_TimingAdvanceOffset;	/* OPTIONAL */
	struct NR_ServingCellConfigCommon__ssb_PositionsInBurst {
		NR_ServingCellConfigCommon__ssb_PositionsInBurst_PR present;
		union NR_ServingCellConfigCommon__NR_ssb_PositionsInBurst_u {
			BIT_STRING_t	 shortBitmap;
			BIT_STRING_t	 mediumBitmap;
			BIT_STRING_t	 longBitmap;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ssb_PositionsInBurst;
	long	*ssb_periodicityServingCell;	/* OPTIONAL */
	long	 dmrs_TypeA_Position;
	struct NR_SetupRelease_RateMatchPatternLTE_CRS	*lte_CRS_ToMatchAround;	/* OPTIONAL */
	struct NR_ServingCellConfigCommon__rateMatchPatternToAddModList {
		A_SEQUENCE_OF(struct NR_RateMatchPattern) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *rateMatchPatternToAddModList;
	struct NR_ServingCellConfigCommon__rateMatchPatternToReleaseList {
		A_SEQUENCE_OF(NR_RateMatchPatternId_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *rateMatchPatternToReleaseList;
	NR_SubcarrierSpacing_t	*ssbSubcarrierSpacing;	/* OPTIONAL */
	struct NR_TDD_UL_DL_ConfigCommon	*tdd_UL_DL_ConfigurationCommon;	/* OPTIONAL */
	long	 ss_PBCH_BlockPower;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct NR_ServingCellConfigCommon__ext1 {
		struct NR_ServingCellConfigCommon__ext1__channelAccessMode_r16 {
			NR_ServingCellConfigCommon__ext1__channelAccessMode_r16_PR present;
			union NR_ServingCellConfigCommon__NR_ext1__NR_channelAccessMode_r16_u {
				NULL_t	 dynamic;
				struct NR_SemiStaticChannelAccessConfig_r16	*semiStatic;
			} choice;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *channelAccessMode_r16;
		long	*discoveryBurstWindowLength_r16;	/* OPTIONAL */
		NR_SSB_PositionQCL_Relation_r16_t	*ssb_PositionQCL_r16;	/* OPTIONAL */
		struct NR_HighSpeedConfig_r16	*highSpeedConfig_r16;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct NR_ServingCellConfigCommon__ext2 {
		struct NR_HighSpeedConfig_v1700	*highSpeedConfig_v1700;	/* OPTIONAL */
		long	*channelAccessMode2_r17;	/* OPTIONAL */
		long	*discoveryBurstWindowLength_r17;	/* OPTIONAL */
		NR_SSB_PositionQCL_Relation_r17_t	*ssb_PositionQCL_r17;	/* OPTIONAL */
		struct NR_HighSpeedConfigFR2_r17	*highSpeedConfigFR2_r17;	/* OPTIONAL */
		struct NR_UplinkConfigCommon_v1700	*uplinkConfigCommon_v1700;	/* OPTIONAL */
		struct NR_NTN_Config_r17	*ntn_Config_r17;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct NR_ServingCellConfigCommon__ext3 {
		struct NR_ServingCellConfigCommon__ext3__featurePriorities_r17 {
			NR_FeaturePriority_r17_t	*redCapPriority_r17;	/* OPTIONAL */
			NR_FeaturePriority_r17_t	*slicingPriority_r17;	/* OPTIONAL */
			NR_FeaturePriority_r17_t	*msg3_Repetitions_Priority_r17;	/* OPTIONAL */
			NR_FeaturePriority_r17_t	*sdt_Priority_r17;	/* OPTIONAL */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} *featurePriorities_r17;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} NR_ServingCellConfigCommon_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_n_TimingAdvanceOffset_6;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_ssb_periodicityServingCell_14;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_dmrs_TypeA_Position_23;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_discoveryBurstWindowLength_r16_39;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_channelAccessMode2_r17_50;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_NR_discoveryBurstWindowLength_r17_52;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_NR_ServingCellConfigCommon;
extern asn_SEQUENCE_specifics_t asn_SPC_NR_ServingCellConfigCommon_specs_1;
extern asn_TYPE_member_t asn_MBR_NR_ServingCellConfigCommon_1[17];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "NR_DownlinkConfigCommon.h"
#include "NR_UplinkConfigCommon.h"
#include "NR_SetupRelease.h"
#include "NR_TDD-UL-DL-ConfigCommon.h"
#include "NR_RateMatchPattern.h"
#include "NR_HighSpeedConfig-r16.h"
#include "NR_SemiStaticChannelAccessConfig-r16.h"
#include "NR_HighSpeedConfig-v1700.h"
#include "NR_HighSpeedConfigFR2-r17.h"
#include "NR_UplinkConfigCommon-v1700.h"
#include "NR_NTN-Config-r17.h"

#endif	/* _NR_ServingCellConfigCommon_H_ */
#include <asn_internal.h>
