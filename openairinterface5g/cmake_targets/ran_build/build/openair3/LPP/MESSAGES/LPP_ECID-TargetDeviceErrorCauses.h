/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "/home/matilde/openairinterface5g/openair3/LPP/MESSAGES/ASN1/37355-g60.asn"
 * 	`asn1c -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -fcompound-names -no-gen-example -findirect-choice -fno-include-deps -D /home/matilde/openairinterface5g/cmake_targets/ran_build/build/openair3/LPP/MESSAGES`
 */

#ifndef	_LPP_ECID_TargetDeviceErrorCauses_H_
#define	_LPP_ECID_TargetDeviceErrorCauses_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <NULL.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LPP_ECID_TargetDeviceErrorCauses__cause {
	LPP_ECID_TargetDeviceErrorCauses__cause_undefined	= 0,
	LPP_ECID_TargetDeviceErrorCauses__cause_requestedMeasurementNotAvailable	= 1,
	LPP_ECID_TargetDeviceErrorCauses__cause_notAllrequestedMeasurementsPossible	= 2
	/*
	 * Enumeration is extensible
	 */
} e_LPP_ECID_TargetDeviceErrorCauses__cause;

/* LPP_ECID-TargetDeviceErrorCauses */
typedef struct LPP_ECID_TargetDeviceErrorCauses {
	long	 cause;
	NULL_t	*rsrpMeasurementNotPossible;	/* OPTIONAL */
	NULL_t	*rsrqMeasurementNotPossible;	/* OPTIONAL */
	NULL_t	*ueRxTxMeasurementNotPossible;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct LPP_ECID_TargetDeviceErrorCauses__ext1 {
		NULL_t	*nrsrpMeasurementNotPossible_r14;	/* OPTIONAL */
		NULL_t	*nrsrqMeasurementNotPossible_r14;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} LPP_ECID_TargetDeviceErrorCauses_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_LPP_cause_2;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_LPP_ECID_TargetDeviceErrorCauses;
extern asn_SEQUENCE_specifics_t asn_SPC_LPP_ECID_TargetDeviceErrorCauses_specs_1;
extern asn_TYPE_member_t asn_MBR_LPP_ECID_TargetDeviceErrorCauses_1[5];

#ifdef __cplusplus
}
#endif

#endif	/* _LPP_ECID_TargetDeviceErrorCauses_H_ */
#include <asn_internal.h>
