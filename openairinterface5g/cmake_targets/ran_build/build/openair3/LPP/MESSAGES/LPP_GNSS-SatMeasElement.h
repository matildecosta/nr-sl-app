/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "/home/matilde/nr-sl-app/openairinterface5g/openair3/LPP/MESSAGES/ASN1/37355-g60.asn"
 * 	`asn1c -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -fcompound-names -no-gen-example -findirect-choice -fno-include-deps -D /home/matilde/nr-sl-app/openairinterface5g/cmake_targets/ran_build/build/openair3/LPP/MESSAGES`
 */

#ifndef	_LPP_GNSS_SatMeasElement_H_
#define	_LPP_GNSS_SatMeasElement_H_


#include <asn_application.h>

/* Including external dependencies */
#include "LPP_SV-ID.h"
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LPP_GNSS_SatMeasElement__mpathDet {
	LPP_GNSS_SatMeasElement__mpathDet_notMeasured	= 0,
	LPP_GNSS_SatMeasElement__mpathDet_low	= 1,
	LPP_GNSS_SatMeasElement__mpathDet_medium	= 2,
	LPP_GNSS_SatMeasElement__mpathDet_high	= 3
	/*
	 * Enumeration is extensible
	 */
} e_LPP_GNSS_SatMeasElement__mpathDet;
typedef enum LPP_GNSS_SatMeasElement__ext1__adrSign_r15 {
	LPP_GNSS_SatMeasElement__ext1__adrSign_r15_positive	= 0,
	LPP_GNSS_SatMeasElement__ext1__adrSign_r15_negative	= 1
} e_LPP_GNSS_SatMeasElement__ext1__adrSign_r15;

/* LPP_GNSS-SatMeasElement */
typedef struct LPP_GNSS_SatMeasElement {
	LPP_SV_ID_t	 svID;
	long	 cNo;
	long	 mpathDet;
	long	*carrierQualityInd;	/* OPTIONAL */
	long	 codePhase;
	long	*integerCodePhase;	/* OPTIONAL */
	long	 codePhaseRMSError;
	long	*doppler;	/* OPTIONAL */
	long	*adr;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct LPP_GNSS_SatMeasElement__ext1 {
		long	*adrMSB_r15;	/* OPTIONAL */
		long	*adrSign_r15;	/* OPTIONAL */
		long	*adrRMSerror_r15;	/* OPTIONAL */
		long	*delta_codePhase_r15;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} LPP_GNSS_SatMeasElement_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_LPP_mpathDet_4;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_LPP_adrSign_r15_19;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_LPP_GNSS_SatMeasElement;
extern asn_SEQUENCE_specifics_t asn_SPC_LPP_GNSS_SatMeasElement_specs_1;
extern asn_TYPE_member_t asn_MBR_LPP_GNSS_SatMeasElement_1[10];

#ifdef __cplusplus
}
#endif

#endif	/* _LPP_GNSS_SatMeasElement_H_ */
#include <asn_internal.h>
