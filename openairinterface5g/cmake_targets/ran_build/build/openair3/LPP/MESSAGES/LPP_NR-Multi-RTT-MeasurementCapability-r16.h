/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "/home/matilde/openairinterface5g/openair3/LPP/MESSAGES/ASN1/37355-g60.asn"
 * 	`asn1c -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -fcompound-names -no-gen-example -findirect-choice -fno-include-deps -D /home/matilde/openairinterface5g/cmake_targets/ran_build/build/openair3/LPP/MESSAGES`
 */

#ifndef	_LPP_NR_Multi_RTT_MeasurementCapability_r16_H_
#define	_LPP_NR_Multi_RTT_MeasurementCapability_r16_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LPP_NR_Multi_RTT_MeasurementCapability_r16__supportOfRSRP_MeasFR1_r16 {
	LPP_NR_Multi_RTT_MeasurementCapability_r16__supportOfRSRP_MeasFR1_r16_supported	= 0
} e_LPP_NR_Multi_RTT_MeasurementCapability_r16__supportOfRSRP_MeasFR1_r16;
typedef enum LPP_NR_Multi_RTT_MeasurementCapability_r16__supportOfRSRP_MeasFR2_r16 {
	LPP_NR_Multi_RTT_MeasurementCapability_r16__supportOfRSRP_MeasFR2_r16_supported	= 0
} e_LPP_NR_Multi_RTT_MeasurementCapability_r16__supportOfRSRP_MeasFR2_r16;
typedef enum LPP_NR_Multi_RTT_MeasurementCapability_r16__srs_AssocPRS_MultiLayersFR1_r16 {
	LPP_NR_Multi_RTT_MeasurementCapability_r16__srs_AssocPRS_MultiLayersFR1_r16_supported	= 0
} e_LPP_NR_Multi_RTT_MeasurementCapability_r16__srs_AssocPRS_MultiLayersFR1_r16;
typedef enum LPP_NR_Multi_RTT_MeasurementCapability_r16__srs_AssocPRS_MultiLayersFR2_r16 {
	LPP_NR_Multi_RTT_MeasurementCapability_r16__srs_AssocPRS_MultiLayersFR2_r16_supported	= 0
} e_LPP_NR_Multi_RTT_MeasurementCapability_r16__srs_AssocPRS_MultiLayersFR2_r16;

/* LPP_NR-Multi-RTT-MeasurementCapability-r16 */
typedef struct LPP_NR_Multi_RTT_MeasurementCapability_r16 {
	long	*maxNrOfRx_TX_MeasFR1_r16;	/* OPTIONAL */
	long	*maxNrOfRx_TX_MeasFR2_r16;	/* OPTIONAL */
	long	*supportOfRSRP_MeasFR1_r16;	/* OPTIONAL */
	long	*supportOfRSRP_MeasFR2_r16;	/* OPTIONAL */
	long	*srs_AssocPRS_MultiLayersFR1_r16;	/* OPTIONAL */
	long	*srs_AssocPRS_MultiLayersFR2_r16;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} LPP_NR_Multi_RTT_MeasurementCapability_r16_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_LPP_supportOfRSRP_MeasFR1_r16_4;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_LPP_supportOfRSRP_MeasFR2_r16_6;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_LPP_srs_AssocPRS_MultiLayersFR1_r16_8;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_LPP_srs_AssocPRS_MultiLayersFR2_r16_10;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_LPP_NR_Multi_RTT_MeasurementCapability_r16;
extern asn_SEQUENCE_specifics_t asn_SPC_LPP_NR_Multi_RTT_MeasurementCapability_r16_specs_1;
extern asn_TYPE_member_t asn_MBR_LPP_NR_Multi_RTT_MeasurementCapability_r16_1[6];

#ifdef __cplusplus
}
#endif

#endif	/* _LPP_NR_Multi_RTT_MeasurementCapability_r16_H_ */
#include <asn_internal.h>
